    PROCESSOR 6502
    INCLUDE "vcs.h"
        INCLUDE "macro.h"
        
;===================
; Variables
;===================

    	SEG.u Variables
        ORG $80 
        
XPOS     = $80
XDIR    = $81

;===================
; 
;===================

   	SEG code
        ORG $F000
        
START: CLEAN_START

    	LDA #76
        STA XPOS
        LDA #1
        STA XDIR
        
Show_Frame
        LDA #$90
        STA COLUBK
        LDA #$FF
        STA COLUP0
        
        STA HMCLR

;===================
; Establish Kernel, Establish a sprite.
;===================

    ; Down 3, Down 37, 192, 30 return to top. 
    	STA WSYNC
        LDA #2
        STA VSYNC
        STA WSYNC
        STA WSYNC
        STA WSYNC
        LDA #0
        STA VSYNC
        
        lda XPOS
        ldx #0
        jsr X_POSITION
        
        sta WSYNC
        sta HMOVE	; can only do horizontal movment at the start of a new line
        
        LDX #34
        
VertBlank 
    	STA WSYNC
        DEX
        BNE VertBlank
        LDA #0
        STA VBLANK
        
        LDX #183
        
MIDDLE
    	STA WSYNC
        DEX
        BNE MIDDLE
        
        ; Load 1 line with graphics x 9
        
        sta WSYNC 
        lda #$18
        sta GRP0
        
        sta WSYNC 
        lda #$18
        sta GRP0
        
        sta WSYNC 
        lda #$18
        sta GRP0
        
        sta WSYNC 
        lda #$3C
        sta GRP0
        
        sta WSYNC 
        lda #$24
        sta GRP0
        
        sta WSYNC 
        lda #$66
        sta GRP0
        
        sta WSYNC 
        lda #$FF
        sta GRP0
        
        sta WSYNC 
        lda #$24
        sta GRP0
        
        sta WSYNC 
        lda #00
        sta GRP0
        
        lda #2
        sta VBLANK
    	LDX #30        ; 30 scanlines of bottom border	

BOTTOM
    	STA WSYNC
        DEX
        BNE BOTTOM

    	lda XPOS
        CLC		; Turning carry off since we need to have it on for additio and subtraction
        ADC XDIR	; A = A + XDIR + Carry
        STA XPOS	; XPOS = A
        CMP #1		; compares XDIR with 1 (since 0 would lead the sprite to be cut off on the bottom
        BEQ L1		; Branch if equal
        CMP #153	; Essentially if equal to
        BEQ L2		; 
        
L1
	LDA #0
        SEC 		; Sets to true/ IF already on nothing happens
        SBC XDIR	; subtract from accumator with borrow
        STA XDIR
        
L2	

	JMP Show_Frame
        
X_POSITION
	STA WSYNC
        SEC 
        LDY $80		; burning a few cycles (loading in current x-position
        
X_P1
	SBC #15		; moving 15 constantly
        BCS X_P1	; bcs

X_P2
	TAY
       	;LDA fine_adjust-$f1,y
        STA HMP0,X
        STA RESP0,X
        RTS
        
fine_adjust:
	.byte $70	; 7px to left.
	.byte $60	; 6px to left.
	.byte $50	; 5px to left.
	.byte $40	; 4px to left.
	.byte $30	; 3px to left.
	.byte $20	; 2px to left.
	.byte $10	; 1px to left.
	.byte $00	; No adjustment.
	.byte $f0	; 1px to right.
	.byte $e0	; 2px to right.
	.byte $d0	; 3px to right.
	.byte $c0	; 4px to right.
	.byte $b0	; 5px to right.
	.byte $a0	; 6px to right.
	.byte $90	; 7px to right.
        
    ORG $FFFC
    .word START
    .word START