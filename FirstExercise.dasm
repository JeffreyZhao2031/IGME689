
	processor 6502
        include "vcs.h"
        include "macro.h"
        include "xmacro.h"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Define Variables

        seg Variables 	; Defining a segment
	org $80		; Variables go to goes into this memory slot ($0080-$00FF) (Memory Map)
			; $ -> absolute mode
                        ; # -> literal mode
                        ; #$ -> literal hexidecimal

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Code segment

	seg Code	; Define where ROM begins
        org $F000	; ROM Starts at $F000

start: 
	sei 		; disable interrupts
        cld		; disable BCD mode
        ldx #$FF	; Load x-register with value of FF (end of RAM)
        txs 		; transform x to the stack point 
        
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        ; Clear out the zero page
        ; Zero page is everything from $00 to $FF
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        
        lda #0 		; Load into accumulator Register A = 0
        ldx #$FF
        
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        ; Go through every bit in zero page and fill it with 0
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

memloop:
	sta $0,X	; Store value of A insidie memory addess $0 + X
        dex		; X--
        bne memloop	; Loop until X is equal to zero (z-flag is set) (Branch until result is 0)
        
        
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        ; Makes the cart exactly 4KB
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        org $FFFC 
        .word start	; brings it to 4KB and is the reset vector, tells it where to go when it starts to run
        .word start	; interupt vector